#N canvas 0 90 1440 752 10;
#X obj 77 24 inlet;
#X obj 263 181 r \$0-switch;
#X msg 232 203 1;
#X msg 263 203 0;
#X obj 232 226 switch~ 0;
#X obj 782 1 inlet;
#X obj 883 249 s \$0-array;
#X obj 883 208 symbol;
#X obj 953 249 t b s;
#X obj 943 306 array size;
#X obj 943 327 s \$0-sampLen_samps;
#X floatatom 963 361 16 0 0 0 - - -;
#X obj 671 243 loadbang;
#X obj 700 284 samplerate~;
#X obj 729 244 r pd-dsp-started;
#X floatatom 700 305 7 0 0 0 - - -;
#X obj 700 325 s \$0-sampRate;
#X obj 77 46 t l b, f 26;
#N canvas 455 118 868 691 playMode&samplePlayer 0;
#X obj 94 14 inlet;
#X obj 173 237 f;
#X msg 173 259 0 \, 1 \$1;
#X obj 173 302 line~;
#N canvas 0 23 1280 752 phaseRamp~ 0;
#X obj 41 49 inlet~;
#X obj 47 446 cos~;
#X obj 47 317 clip~ 0 1;
#X obj 542 472 cos~;
#X obj 542 378 clip~ 0 1;
#X obj 542 410 *~ 0.25;
#X obj 542 441 +~ 0.25;
#X obj 47 376 *~ 0.25;
#X obj 47 415 -~ 0.25;
#X obj 556 298 - 1;
#X obj 542 319 -~;
#X obj 47 173 *~;
#X text 45 26 phase (0--> 1);
#X obj 214 47 inlet;
#X text 204 26 phase period;
#X obj 310 47 inlet;
#X text 295 26 envelope length;
#X obj 214 116 / 1, f 21;
#X obj 310 87 t b f;
#X text 231 136 nSegments;
#X text 347 115 1 - This calculation gives us the number of times the
length of our envelope fits into the phase loop. We use this to divide
the phase ramp into n segments;
#X obj 321 555 outlet~;
#X text 372 553 Envelope out;
#X text 51 254 ramp up;
#X text 106 299 we only want to take the first segment of the ramp
(now 0--> nSegments) for out ramp up (i.e. attack);
#X text 105 329 When clip~ receives signals above 1 it outputs 1;
#X text 540 266 ramp down;
#X text 582 289 we only want to take the last segment of the ramp (now
0--> nSegments) for out ramp down (i.e. release);
#X text 580 319 This looks complicated but essentially we are just
shifting our ramp from a range of 0-->nSegments;
#X text 579 340 to a new range of -1*(nSegments-1) --> 1;
#X floatatom 985 307 5 0 10 0 - - -;
#X obj 1039 363 - 1;
#X obj 985 363 -;
#X floatatom 985 384 5 0 0 0 - - -;
#X msg 1038 332 10;
#X obj 985 327 t f b;
#X text 945 328 ---->;
#X text 951 339 e.g.;
#X text 1018 306 this goes from 0 --> 10;
#X text 1022 384 this goes from -9 --> 1;
#X text 608 376 When clip~ receives signals below 0 it outputs 0;
#X text 598 408 We only want to read through 1/4 of the total phase
of a cosine.;
#X text 95 403 For our attack we want the final 1/4 when the wave goes
from 0->1;
#X text 96 367 We only want to read through 1/4 of the total phase
of a cosine.;
#X text 598 443 For our decay we want the second 1/4 when the wave
goes from 0->-1;
#X text 81 447 The signal here goes from minimum 0 to maximum 1;
#X text 574 474 The signal here goes from maximum 0 to minimum -1;
#X text 468 517 ramp up only changes during the first segment (when
ramp down is at 0) ==> the sum of both is ramp up (going 0-->1) + ramp
down (static 0). Anything + 0 is 0 ==> the output is the ramp up;
#X text 467 571 ramp down only changes during the final segment (when
ramp up is at 1) ==> the sum of both is ramp down (going 0--> -1) +
ramp up (static 1). there fore the output is goes from 1 --> 0 as ramp
down goes 0--> -1;
#X text 1017 724 sjf \, SAE London \, 2020;
#X text 831 24 This is a clever idea I stole from the grooveduck example
in MaxMSP (which is by jhno I think...);
#X text 831 48 It takes a phase ramp in (e.g. the full phase for reading
a file from tabread~ \, and outputs a sine wave based amplitude ramp
at the beginning and end;
#X text 831 85 phase period and envelope lenth can be in samples or
ms or s or hrs... as long as they are both given in the same unit;
#X text 72 171 2 - by multiplying the ramp (0-->1) by nSegments \,
we get a new ramp that goes 0 --> nSegments;
#X connect 0 0 11 0;
#X connect 1 0 21 0;
#X connect 2 0 7 0;
#X connect 3 0 21 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 9 0 10 1;
#X connect 10 0 4 0;
#X connect 11 0 2 0;
#X connect 11 0 10 0;
#X connect 13 0 17 0;
#X connect 15 0 18 0;
#X connect 17 0 9 0;
#X connect 17 0 11 1;
#X connect 18 0 17 0;
#X connect 18 1 17 1;
#X connect 30 0 35 0;
#X connect 31 0 32 1;
#X connect 32 0 33 0;
#X connect 34 0 31 0;
#X connect 35 0 32 0;
#X connect 35 1 34 0;
#X restore 173 412 pd phaseRamp~;
#X obj 312 540 *~;
#X obj 94 258 delay;
#X obj 49 328 s \$0-switch;
#X obj 312 584 outlet~;
#N canvas 246 288 978 412 ramplLen_ms 0;
#X obj 390 28 inlet;
#X obj 152 163 / 44.1;
#X obj 165 109 * 0.001;
#X obj 165 130 t b f;
#X obj 449 309 f;
#X obj 462 167 f;
#X obj 425 142 sel 0 1;
#X obj 493 357 outlet;
#X obj 476 142 r \$0-ioi;
#X obj 152 66 r \$0-sampLen_samps;
#X obj 165 88 r \$0-sampRate;
#X obj 462 188 sel 0;
#X obj 440 28 r \$0-sync;
#X text 541 31 if sync is on && not playing forward && ioi not equal
0 \; use ioi \; \; else \; use samp len;
#X obj 390 69 t b;
#X obj 426 102 int;
#X connect 0 0 14 0;
#X connect 1 0 4 1;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 1 1;
#X connect 4 0 7 0;
#X connect 5 0 11 0;
#X connect 6 0 4 0;
#X connect 6 1 5 0;
#X connect 8 0 5 1;
#X connect 9 0 1 0;
#X connect 10 0 2 0;
#X connect 11 0 4 0;
#X connect 11 1 7 0;
#X connect 12 0 15 1;
#X connect 14 0 15 0;
#X connect 15 0 6 0;
#X restore 232 185 pd ramplLen_ms;
#X f 8;
#X obj 231 381 r \$0-rampLen, f 10;
#X obj 121 236 + 2;
#X obj 172 92 t b l;
#X obj 232 164 t f f, f 12;
#X text 334 138 tape speed;
#N canvas 256 25 944 752 player~ 0;
#X obj 160 337 *~ 44100;
#X obj 160 363 +~ 1;
#X obj 159 425 outlet~;
#X obj 160 392 tabread4~;
#X obj 139 110 inlet~;
#X text 102 82 play position phase ramp;
#X obj 238 346 r \$0-array;
#X msg 238 367 set \$1;
#X obj 295 111 inlet;
#X text 285 81 play range in samples;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X connect 8 0 0 1;
#X restore 327 520 pd player~;
#N canvas 0 23 1189 645 playMode~ 0;
#X text 153 456 fade -->;
#X text 627 550 <-- to sample tabplay;
#X obj 503 181 == 0;
#X obj 542 181 == 1;
#X obj 576 181 == 2;
#X obj 610 181 == 3;
#X obj 208 460 outlet~;
#N canvas 0 23 718 300 forth&back 0;
#X obj 193 126 -~ 1;
#X obj 66 127 clip~ 0 1;
#X obj 183 157 clip~ 0 1;
#X obj 183 178 *~ -1;
#X obj 128 268 outlet~;
#X obj 316 33 inlet;
#X obj 149 79 *~ 0;
#X obj 145 39 inlet~;
#X obj 227 58 * 2;
#X obj 150 221 *~ 0, f 28;
#X connect 0 0 2 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 5 0 8 0;
#X connect 5 0 9 1;
#X connect 6 0 0 0;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 6 1;
#X connect 9 0 4 0;
#X restore 389 285 pd forth&back;
#N canvas 831 42 454 512 back&forth 0;
#X obj 252 160 -~ 1;
#X obj 125 161 clip~ 0 1;
#X obj 242 191 clip~ 0 1;
#X obj 242 212 *~ -1;
#X obj 131 253 *~ -1;
#X obj 131 274 +~ 1;
#X obj 131 396 outlet~;
#X obj 133 30 inlet~;
#X obj 157 98 *~ 0;
#X obj 358 30 inlet;
#X obj 218 57 * 2;
#X obj 131 295 *~ 0, f 41;
#X connect 0 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 11 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 0 0 0;
#X connect 9 0 10 0;
#X connect 9 0 11 1;
#X connect 10 0 8 1;
#X connect 11 0 6 0;
#X restore 502 286 pd back&forth;
#N canvas 0 22 450 300 back 0;
#X obj 37 37 inlet~;
#X obj 45 132 +~ 1;
#X text 85 132 back;
#X obj 45 111 *~ 0;
#X obj 164 53 inlet;
#X obj 70 88 * -1;
#X obj 45 153 *~, f 22;
#X obj 45 174 outlet~;
#X connect 0 0 3 0;
#X connect 1 0 6 0;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X connect 4 0 6 1;
#X connect 5 0 3 1;
#X connect 6 0 7 0;
#X restore 311 283 pd back;
#N canvas 0 23 450 300 forth 0;
#X obj 37 37 inlet~;
#X obj 37 90 *~, f 30;
#X obj 196 40 inlet;
#X obj 37 111 outlet~;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X restore 207 283 pd forth;
#N canvas 0 23 454 416 reps 0;
#X obj 37 37 inlet~;
#X obj 36 219 outlet~;
#X obj 166 43 inlet;
#X obj 37 167 wrap~;
#X obj 37 123 *~ 0;
#X obj 313 30 inlet;
#X text 338 59 nreps;
#X text 171 23 on/off;
#X obj 59 100 * 2, f 20;
#X obj 313 60 - 2;
#X obj 310 117 pow -1;
#X obj 37 188 *~;
#X obj 233 173 *~ -1;
#X obj 233 194 +~, f 9;
#X obj 233 215 *~, f 15;
#X obj 283 335 outlet~;
#X obj 166 64 t f f f;
#X obj 233 265 *~, f 10;
#X obj 359 214 sig~;
#X floatatom 383 195 5 0 0 0 - - -;
#X obj 349 161 * -1;
#X obj 349 182 + 1;
#X connect 0 0 4 0;
#X connect 2 0 16 0;
#X connect 3 0 11 0;
#X connect 4 0 3 0;
#X connect 4 0 12 0;
#X connect 5 0 9 0;
#X connect 8 0 4 1;
#X connect 9 0 8 1;
#X connect 9 0 10 0;
#X connect 9 0 13 1;
#X connect 10 0 11 1;
#X connect 10 0 14 1;
#X connect 11 0 1 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 17 0;
#X connect 16 0 8 0;
#X connect 16 1 17 1;
#X connect 16 2 20 0;
#X connect 17 0 15 0;
#X connect 18 0 15 0;
#X connect 20 0 21 0;
#X connect 21 0 18 0;
#X connect 21 0 19 0;
#X restore 610 288 pd reps;
#X f 11;
#X obj 560 562 outlet~;
#X obj 560 474 *~ 1, f 53;
#X obj 582 30 inlet;
#X text 586 7 play mode;
#X obj 875 45 inlet;
#X text 871 23 tape speed;
#X text 645 7 0 - forth \; 1 - back \; 2 - forth&back \; 3 - back&forth
\; 4 - 2 * reps \; 5 - 3 * reps \; 6 - 4 * reps \; etc;
#X obj 582 66 int;
#X obj 643 155 t f f, f 6;
#X obj 207 27 inlet~;
#X text 220 3 phase in (0 --> 1);
#X obj 502 307 *~ 0.5;
#X obj 389 306 *~ 0.5;
#X obj 643 181 >= 4;
#X floatatom 901 82 5 0 0 0 - - -;
#X obj 318 461 outlet~;
#X connect 2 0 10 1;
#X connect 3 0 9 1;
#X connect 4 0 7 1;
#X connect 5 0 8 1;
#X connect 7 0 6 0;
#X connect 7 0 24 0;
#X connect 8 0 6 0;
#X connect 8 0 23 0;
#X connect 9 0 6 0;
#X connect 9 0 13 0;
#X connect 10 0 6 0;
#X connect 10 0 13 0;
#X connect 11 0 6 0;
#X connect 11 0 13 0;
#X connect 11 1 27 0;
#X connect 13 0 12 0;
#X connect 14 0 19 0;
#X connect 16 0 26 0;
#X connect 16 0 13 1;
#X connect 19 0 2 0;
#X connect 19 0 3 0;
#X connect 19 0 4 0;
#X connect 19 0 5 0;
#X connect 19 0 20 0;
#X connect 20 0 25 0;
#X connect 20 1 11 2;
#X connect 21 0 7 0;
#X connect 21 0 9 0;
#X connect 21 0 10 0;
#X connect 21 0 8 0;
#X connect 21 0 11 0;
#X connect 23 0 13 0;
#X connect 24 0 13 0;
#X connect 25 0 11 1;
#X restore 173 343 pd playMode~;
#X f 25;
#X text 220 135 play mode;
#X obj 383 381 * 44.1;
#X obj 316 175 sel 0;
#X msg 316 196 1;
#X obj 316 217 f;
#X obj 191 118 unpack 0 0, f 21;
#X obj 409 341 * 0.001;
#X obj 409 320 r \$0-sampRate;
#X obj 173 433 *~, f 19;
#X obj 94 35 t b l;
#X obj 529 154 inlet;
#X msg 529 175 0;
#X floatatom 191 139 5 0 0 0 - - -;
#X obj 94 279 t b b;
#X msg 124 303 0;
#X connect 0 0 26 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 16 0;
#X connect 4 0 25 0;
#X connect 5 0 8 0;
#X connect 6 0 30 0;
#X connect 9 0 4 1;
#X connect 9 0 1 1;
#X connect 9 0 11 0;
#X connect 9 0 18 0;
#X connect 10 0 4 2;
#X connect 11 0 6 1;
#X connect 12 0 1 0;
#X connect 12 1 22 0;
#X connect 13 0 9 0;
#X connect 13 1 16 1;
#X connect 15 0 5 1;
#X connect 16 0 4 0;
#X connect 16 1 25 1;
#X connect 16 2 15 0;
#X connect 18 0 15 1;
#X connect 19 0 20 0;
#X connect 19 1 21 0;
#X connect 20 0 21 0;
#X connect 21 0 16 2;
#X connect 22 0 13 0;
#X connect 22 0 29 0;
#X connect 22 1 19 0;
#X connect 23 0 18 1;
#X connect 24 0 23 0;
#X connect 25 0 5 0;
#X connect 26 0 6 0;
#X connect 26 1 12 0;
#X connect 27 0 28 0;
#X connect 28 0 3 0;
#X connect 30 0 7 0;
#X connect 30 1 31 0;
#X connect 31 0 3 0;
#X restore 77 92 pd playMode&samplePlayer;
#X f 15;
#X obj 77 139 outlet~;
#X text 297 205 1 - switch on audio & set play phase to 0;
#X obj 77 67 t l b, f 8;
#X text 177 1 arguments to play note \; 1 - play mode \; 2 - tape speed
\;;
#X obj 768 107 s \$0-sampLen_samps;
#X obj 840 72 s \$0-sampRate;
#X obj 805 138 s \$0-ioi;
#X obj 911 117 s \$0-rampLen;
#X obj 970 88 s \$0-sync;
#X obj 782 24 route ioi sampRate array rampLen sync;
#X connect 0 0 17 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 5 0 28 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 1 9 1;
#X connect 9 0 10 0;
#X connect 9 0 11 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 14 0 13 0;
#X connect 15 0 16 0;
#X connect 17 0 21 0;
#X connect 17 1 2 0;
#X connect 17 1 7 0;
#X connect 18 0 19 0;
#X connect 21 0 18 0;
#X connect 21 1 18 1;
#X connect 28 0 25 0;
#X connect 28 1 24 0;
#X connect 28 2 7 0;
#X connect 28 3 26 0;
#X connect 28 4 27 0;
